<?xml version="1.0"?>

<launch>
  <arg name="agent" default="agent1"/>
  <arg name="cmd_timeout" default="0.5"/>
  <arg name="x" default="2.0"/>
  <arg name="y" default="-2.0"/>
  <arg name="z" default="0.1"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>
  
  <group ns="$(arg agent)">
    <!-- Spawn the vehicle. -->
    <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
          args="-urdf 
		-param /robot_description
                -model $(arg agent)
                -x $(arg x) 
                -y $(arg y) 
                -z $(arg z)
                -R $(arg roll) 
                -P $(arg pitch) 
                -Y $(arg yaw)"/>

    <!-- Load the joint controllers. One of these publishes the joint states
         to joint_states. -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
          args="$(find hamster_vehicle_gazebo)/config/hamster_joint_ctrlr_params.yaml" output="screen"/>
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" value="500" />
      <param name="tf_prefix" value="$(arg agent)" />
    </node>
    
    <!-- Control the steering, axle, and shock absorber joints. -->
    <node name="hamster_ackermann_controller" pkg="hamster_vehicle_gazebo"
          type="ackermann_controller.py">
      <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
      <rosparam file="$(find hamster_vehicle_gazebo)/config/hamster_ackermann_ctrlr_params.yaml" command="load"/>
      <param name="tf_prefix" value="$(arg agent)"/>
    </node>  
  </group>
</launch>
